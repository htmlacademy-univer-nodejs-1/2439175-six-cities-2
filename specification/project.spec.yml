openapi: 3.1.0
info:
  title: API сервер для проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов»
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

tags:
  - name: offer
    description: Действия с объявлениями.
  - name: comment
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователями.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля
      requestBody:
        description: Вход в закрытую часть приложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
        required: true
      responses:
        "201":
          description: Успешная авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: JWT-TOKEN
                $ref: '#/components/schemas/user'
        "403":
          description: Авторизация не пройдена
        "404":
          description: Пользователь с таким email не найден
      

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: Пользователь авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "401":
          description: Пользователь не авторизован

  
  /offer/premium/{city}:
    get:
      tags:
        - offers
      summary: Премиальные предложения для города
      description: Возвращает 3 или меньше предложений с флагом "isPremium".
      parameters:
          - name: city
            in: query
            description: Город для поиска предложений
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/city'
      responses:
        "200":
          description: Премиальные предложения для города
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers'
        "404":
          description: Предложения для city не получены
  
  /offer/{offerId}:
    post:
      tags:
        - offer
      summary: Редактирование предложения
      description: Редактирование предложения
      security:
        - Bearer: [ ]
      parameters:
          - name: offerId
            in: query
            description: Идентификатор предложения
            content:
              application/json:
                schema:
                  type: string
                  example: 509dfsf432vsdfgsd
      requestBody:
        description: Данные для редактирования предложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editOffer'
        required: true
      responses:
        "200":
          description: Предложение изменено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/editOffer'
        "400":
          description: Данные не прошли валидацию. Предложение не зменено.
        "401":
          description: Пользователь не авторизован
        "404":
          description: Предложение с offerId не найдено
    delete:
      tags:
        - offer
      summary: Удаление предложения
      description: Удаление предложения
      security:
        - Bearer: [ ]
      parameters:
          - name: offerId
            in: query
            description: Идентификатор предложения
            content:
              application/json:
                schema:
                  type: string
                  example: 509dfsf432vsdfgsd
      responses:
        "204":
          description: Предложение удалено
        "401":
          description: Пользователь не авторизован
    
    get:
      tags:
        - offer
      summary: Детальная информация по предложению
      description: Детальная информация по предложению
      parameters:
          - name: offerId
            in: query
            description: Идентификатор предложения
            content:
              application/json:
                schema:
                  type: string
                  example: 509dfsf432vsdfgsd
      responses:
        "200":
          description: Детальная информация по предложению
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "404":
          description: Предложение с offerId не найдено
  
  /offer:
    get:
      tags:
        - offer
      summary: Список предложений по аренде
      description: Список предложений по аренде
      parameters:
        - name: count
          in: query
          description: Количество предложений для показа
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    example: 40
                    maximum: 60
      responses:
        "200":
          description: Список предложений по аренде
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers'
    post:
      tags:
        - offer
      summary: Создание нового предложения
      description: Создание нового предложения
      security:
        - Bearer: [ ]
      requestBody:
        description: Данные для создания предложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'
        required: true
      responses:
        "200":
          description: Предложение создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "400":
          description: Предложение не создано. Переданы невалидные данные
        "401":
          description: Пользователь не авторизован

      post:
        tags:
          - comments
        summary: Добавление комментария
        description: Добавление комментария
        security:
          - Bearer: [ ]
        parameters:
          - name: offerId
            in: query
            description: Идентификатор предложения
            content:
              application/json:
                schema:
                  type: string
                  example: 509dfsf432vsdfgsd
        requestBody:
          description: Добавление комментария
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commentCreate'
          required: true
        responses:
          "200":
            description: Комментарий успешно добавлен
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/comment'
          "404":
            description: Не удалось найти предложение по offerId
          "401":
            description: Пользователь не авторизован
          "403":
            description: Недостаточно прав. Предложение создано другим пользователем.
    
    /offer/favourites/{offerId}:
      post:
        tags:
          - offer
        summary: Добавить предложение в список любимых
        description: Добавляет предложение в спиоск любимых предложений пользователя
        security:
          - Bearer: [ ]
        parameters:
          - name: offerId
            in: query
            description: Идентификатор предложения
            content:
              application/json:
                schema:
                  type: string
                  example: 509dfsf432vsdfgsd
        responses:
          "200":
            description: Предложение успешно добавлено
          "404":
            description: Не удалось найти предложение по offerId

      delete:
        tags:
          - offer
        summary: Удалить предложение из списка любимых
        description: Удаляет предложение из списка любимых предложений пользователя
        security:
          - Bearer: [ ]
        parameters:
          - name: offerId
            in: query
            description: Идентификатор предложения
            content:
              application/json:
                schema:
                  type: string
                  example: 509dfsf432vsdfgsd
        responses:
          "204":
            description: Предложение успешно удалено
          "404":
            description: Не удалось найти предложение по offerId

    /offer/favourites/get:
      get:
        tags:
          - offer
        summary: Получить любимые предложения пользователя
        description: Добавляет предложение в спиоск любимых предложений пользователя
        security:
          - Bearer: [ ]
        responses:
          "200":
            description: Предложение успешно получены
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/offers'
          "401":
            description: Пользователь не авторизован
    
    /offer/{offerId}/comments:
      get:
        tags:
          - offer
        summary: Получить комментарии по предложению
        description: Получает комментарии по конкретному предложению. Не больше 50.
        parameters:
          - name: offerId
            in: query
            description: Идентификатор предложения
            content:
              application/json:
                schema:
                  type: string
                  example: 509dfsf432vsdfgsd
        responses:
          "200":
            description: Предложение успешно получены
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/comments'
          "404":
            description: Предложение не найдено.



components:
  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: ogima@yandex.ru

        firstname:
          type: string
          example: Kilya

        password:
          type: string
          example: "1337228"
        
        type:
          type: string
          enum: [Pro, Base]
          example: Base

    user:
      type: object

      properties:
        id:
          type: string
          example: 6595a0c57f302d0c63791987

        email:
          type: string
          example: ogima@yandex.ru

        username:
          type: string
          example: ogima
        
        avatarPath:
          type: string
          example: test.jpg

        type:
          enum: ['Base', 'Pro']
          example: Base

    loginUser:
      type: object

      properties:
        email:
          type: string
          example: ogima@yandex.ru

        password:
          type: string
          example: password1
    
    offer:
      type: object
      properties:
        name:
          type: string
          example: "72-комнатная квартира на Уралмаше"
          minLength: 10
          maxLength: 100

        description:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
          minLength: 20
          maxLength: 1024

        date:
          type: string
          example: 2002-08-01T13:37:42Z

        city:
          $ref: '#/components/schemas/city'

        preview:
          type: string
          example: preview.jpg

        photoes:
          type: array
          items:
            type: string
            example: photo.jpg
          minItems: 6
          maxItems: 6

        isPremium:
          type: boolean
          example: true

        isFavourite:
          type: boolean
          example: false

        rating:
          type: number
          format: float
          example: 2.5
          minimum: 1
          maximum: 5

        type:
          type: string
          enum: [ Apartment, House, Room, Hotel ]
          example: Hotel

        rooms:
          type: integer
          example: 2
          minimum: 1
          maximum: 8

        guests:
          type: integer
          example: 9
          minimum: 1
          maximum: 10

        cost:
          type: number
          example: 13370
          minimum: 100
          maximum: 100000

        extras:
          type: array
          items:
            type: string
            enum: [ Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge ]
            example: Air conditioning, Laptop friendly workspace
          minItems: 1

        author:
          $ref: '#/components/schemas/user'

        commentsCount:
          type: number
          example: 2

        coordinates:
          $ref: '#/components/schemas/coordinates'

    editOffer:
      type: object
      properties:
        name:
          type: string
          example: "72-комнатная квартира на Уралмаше"
          minLength: 10
          maxLength: 100

        description:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
          minLength: 20
          maxLength: 1024

        date:
          type: string
          example: 2002-08-01T13:37:42Z

        city:
          $ref: '#/components/schemas/city'

        preview:
          type: string
          example: preview.jpg

        photoes:
          type: array
          items:
            type: string
            example: photo.jpg
          minItems: 6
          maxItems: 6

        isPremium:
          type: boolean
          example: true

        isFavourite:
          type: boolean
          example: false

        rating:
          type: number
          format: float
          example: 2.5
          minimum: 1
          maximum: 5

        type:
          type: string
          enum: [ Apartment, House, Room, Hotel ]
          example: Hotel

        rooms:
          type: integer
          example: 2
          minimum: 1
          maximum: 8

        guests:
          type: integer
          example: 9
          minimum: 1
          maximum: 10

        cost:
          type: number
          example: 13370
          minimum: 100
          maximum: 100000

        extras:
          type: array
          items:
            type: string
            enum: [ Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge ]
            example: Air conditioning, Laptop friendly workspace
          minItems: 1

        author:
          $ref: '#/components/schemas/user'

        commentsCount:
          type: number
          example: 2

        coordinates:
          $ref: '#/components/schemas/coordinates'

    offers:
      type: array
      items:
        type: offer
        $ref: '#/components/schemas/offer'

    coordinates:
      type: string
      enum: ['48.8566, 2.3522', '50.9375, 6.9603', '50.8503, 4.3517', '52.3702, 4.8952', '53.5511, 9.9937', '51.2277, 6.7735']
      example: '48.8566, 2.3522'
    
    city:
      type: string
      enum: [ Apartment, House, Room, Hotel ]
      example: Hotel
    
    comment:
      type: object
      properties:
        text:
          type: string
          example: Типичный отзыв
          minLength: 5
          maxLength: 1024
        
        id:
          type: string
          example: 5847vsdf8547392

        date:
          type: string
          example: 2002-13-24T11:32:00Z

        rating:
          type: number
          example: 5
          minimum: 1
          maximum: 5
        user:
          $ref: '#/components/schemas/user'

    comments:
      type: array
      items:
        type: comment
        $ref: '#/components/schemas/comment'
    
    commentCreate:
      type: object
      properties:
        text:
          type: string
          example: Типичный отзыв
          minLength: 5
          maxLength: 1024

        rating:
          type: number
          example: 5
          minimum: 1
          maximum: 5

        userId:
          $ref: '#/components/schemas/user'